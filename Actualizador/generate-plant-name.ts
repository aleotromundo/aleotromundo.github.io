'use server';/** * @fileOverview An AI agent that suggests a name for a plant based on its image. * * - generatePlantName - A function that suggests a name for a plant based on its image. * - GeneratePlantNameInput - The input type for the generatePlantName function. * - GeneratePlantNameOutput - The return type for the generatePlantName function. */import {ai} from '@/ai/genkit';import {z} from 'genkit';const GeneratePlantNameInputSchema = z.object({  photoDataUri: z    .string()    .describe(      "Una foto de una planta, como un URI de datos que debe incluir un tipo MIME y usar codificación Base64. Formato esperado: 'data:<mimetype>;base64,<encoded_data>'."    ),});export type GeneratePlantNameInput = z.infer<typeof GeneratePlantNameInputSchema>;const GeneratePlantNameOutputSchema = z.object({  plantName: z.string().describe('Un nombre común sugerido para la planta en español basado en la foto. Si la planta no puede ser identificada, esto debe ser "Planta Desconocida".'),});export type GeneratePlantNameOutput = z.infer<typeof GeneratePlantNameOutputSchema>;export async function generatePlantName(input: GeneratePlantNameInput): Promise<GeneratePlantNameOutput> {  return generatePlantNameFlow(input);}const prompt = ai.definePrompt({  name: 'generatePlantNamePrompt',  input: {schema: GeneratePlantNameInputSchema},  output: {schema: GeneratePlantNameOutputSchema},  prompt: `Eres un IA experta en botánica. Tu tarea es identificar la planta en la foto proporcionada y devolver su nombre común en Español.DEBES responder ÚNICAMENTE con un objeto JSON válido. Cualquier otra salida no es aceptable.El objeto JSON debe tener una única clave "plantName".Si puedes identificar la planta, el valor de "plantName" debe ser su nombre común en Español. Ejemplo: { "plantName": "Monstera Deliciosa" }Si NO puedes identificar la planta con seguridad a partir de la foto, el valor de "plantName" DEBE ser la cadena literal "Planta Desconocida". Ejemplo: { "plantName": "Planta Desconocida" }NO incluyas ningún texto, explicaciones, markdown, o cualquier carácter fuera del objeto JSON. Tu respuesta debe ser parseable directamente como JSON.Foto: {{media url=photoDataUri}}Asegúrate de que tu respuesta sea ÚNICAMENTE el objeto JSON.`,});const generatePlantNameFlow = ai.defineFlow(  {    name: 'generatePlantNameFlow',    inputSchema: GeneratePlantNameInputSchema,    outputSchema: GeneratePlantNameOutputSchema,  },  async input => {    try {      const {output} = await prompt(input);      if (!output || typeof output.plantName !== 'string' || output.plantName.trim() === '') {        console.error('GeneratePlantNameFlow: El modelo devolvió un plantName inválido o vacío. Salida:', output);        // Fallback consistente si la IA falla en proveer un nombre válido según las instrucciones.        return { plantName: 'Planta Desconocida' };      }      // Si la IA explícitamente dice "Planta Desconocida", o provee un nombre, está bien.      return output;    } catch (error) {      console.error('GeneratePlantNameFlow: Error durante la ejecución del prompt:', error);      // Fallback en caso de error en la ejecución del prompt.      return { plantName: 'Planta Desconocida' };    }  });
'use server';/** * @fileOverview Generates a creative background for a plant's PDF page using AI. * * - generatePdfBackground - A function that generates the background. * - GeneratePdfBackgroundInput - The input type for the generatePdfBackground function. * - GeneratePdfBackgroundOutput - The return type for the generatePdfBackground function. */import {ai} from '@/ai/genkit';import {z} from 'genkit';const GeneratePdfBackgroundInputSchema = z.object({  plantName: z.string().describe('The name of the plant.'),  plantDescription: z.string().describe('The description of the plant (can be empty).'),});export type GeneratePdfBackgroundInput = z.infer<typeof GeneratePdfBackgroundInputSchema>;const GeneratePdfBackgroundOutputSchema = z.object({  backgroundDataUri: z    .string()    .describe(      'A data URI containing the generated background image, that must include a MIME type and use Base64 encoding. Expected format: \'data:<mimetype>;base64,<encoded_data>\'.'    ),});export type GeneratePdfBackgroundOutput = z.infer<typeof GeneratePdfBackgroundOutputSchema>;export async function generatePdfBackground(  input: GeneratePdfBackgroundInput): Promise<GeneratePdfBackgroundOutput> {  return generatePdfBackgroundFlow(input);}const generatePdfBackgroundFlow = ai.defineFlow(  {    name: 'generatePdfBackgroundFlow',    inputSchema: GeneratePdfBackgroundInputSchema,    outputSchema: GeneratePdfBackgroundOutputSchema,  },  async (input: GeneratePdfBackgroundInput) => {    // Construct a text prompt for the image generation model.    let imagePromptText = `Un fondo hermoso y artístico para una página sobre la planta llamada "${input.plantName}".`;    if (input.plantDescription && input.plantDescription.trim() !== "") {      // Limit description length to avoid overly long prompts      const shortDescription = input.plantDescription.length > 200         ? input.plantDescription.substring(0, 197) + "..."         : input.plantDescription;      imagePromptText += ` La planta se describe como: "${shortDescription}". El fondo debe ser complementario, sutilmente tematizado alrededor de la naturaleza o elementos botánicos, y estéticamente agradable para una página de catálogo. Evitar texto en la imagen.`;    } else {      imagePromptText += ` El fondo debe ser sutilmente tematizado alrededor de la naturaleza o elementos botánicos, complementario y estéticamente agradable para una página de catálogo. Evitar texto en la imagen.`;    }    // Ensure prompt is not excessively long.    imagePromptText = imagePromptText.substring(0, 1000);    const {media} = await ai.generate({      model: 'googleai/gemini-2.0-flash-exp', // Model for image generation      prompt: imagePromptText, // Direct text prompt for image generation      config: {        responseModalities: ['TEXT', 'IMAGE'], // Gemini 2.0 Flash requires both      },    });    if (!media?.url) {      console.error('La generación de imágenes no devolvió una URL de medios. Mensaje de entrada:', imagePromptText);      throw new Error('La generación de imágenes no devolvió una URL de medios.');    }    return {backgroundDataUri: media.url};  });
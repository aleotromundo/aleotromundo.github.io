// src/app/page.tsx"use client";import { AppHeader } from "@/components/header";import { PlantForm } from "@/components/plant-form";import { PlantList } from "@/components/plant-list";import { Button } from "@/components/ui/button";import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from "@/components/ui/dialog";import { getPlantsFromStorage, savePlantsToStorage } from "@/lib/plant-storage";import type { Plant } from "@/lib/plant-types";import { useToast } from "@/hooks/use-toast";import { PlusCircle } from "lucide-react";import React, { useState, useEffect } from "react";export default function HomePage() {  const [plants, setPlants] = useState<Plant[]>([]);  const [isMounted, setIsMounted] = useState(false);  const [isFormOpen, setIsFormOpen] = useState(false);  const { toast } = useToast();  useEffect(() => {    setIsMounted(true);    setPlants(getPlantsFromStorage());  }, []);  useEffect(() => {    if (isMounted) {      savePlantsToStorage(plants);    }  }, [plants, isMounted]);  const handleSavePlant = async (newPlantData: Omit<Plant, "id" | "aiBackgroundDataUri"> & { aiBackgroundDataUri?: string }) => {    const newPlant: Plant = {      ...newPlantData,      id: new Date().toISOString(), // Simple unique ID    };    setPlants((prevPlants) => [...prevPlants, newPlant]);    toast({ title: "¡Planta Guardada!", description: `${newPlant.name} ha sido añadida a tu jardín.` });  };  if (!isMounted) {    // Or a proper skeleton loader    return (      <div className="flex justify-center items-center min-h-screen">        <p>Cargando tu jardín...</p>      </div>    );  }  return (    <div className="flex flex-col min-h-screen bg-background">      <AppHeader plants={plants} />      <main className="flex-grow container mx-auto px-4 py-8">        <div className="flex justify-between items-center mb-8">          <h2 className="text-3xl font-semibold text-primary">Mi Jardín</h2>          <Dialog open={isFormOpen} onOpenChange={setIsFormOpen}>            <DialogTrigger asChild>              <Button variant="default" aria-label="Añadir Nueva Planta">                <PlusCircle className="mr-2 h-5 w-5" /> Añadir Nueva Planta              </Button>            </DialogTrigger>            <DialogContent className="sm:max-w-[600px] max-h-[90vh] overflow-y-auto">              <DialogHeader>                <DialogTitle className="text-2xl text-primary">Añadir Nueva Planta</DialogTitle>              </DialogHeader>              <PlantForm                 onSavePlant={handleSavePlant}                 onClose={() => setIsFormOpen(false)}               />            </DialogContent>          </Dialog>        </div>        <PlantList plants={plants} />      </main>      <footer className="text-center p-4 text-sm text-muted-foreground border-t">        <p>&copy; {new Date().getFullYear()} PlantPal. ¡Feliz siembra!</p>      </footer>    </div>  );}